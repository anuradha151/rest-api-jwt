# ===============================
# = DATA SOURCE
# ===============================
#### Set here configurations for the database connection
### Connection url for the database "govi_mithuru"
spring.main.banner-mode=off
spring.datasource.url=jdbc:mysql://localhost:3306/login?useSSL=false&characterEncoding=utf-8
spring.datasource.dbcp2.validation-query=SELECT 1
spring.datasource.dbcp2.test-on-borrow=true
spring.jpa.properties.hibername.cache.use_second_level_cache:false
spring.jpa.properties.hibername.cache.use_query_cache:false
spring.jpa.properties.hibername.generate_statistics:false
#
# Username and password
#
spring.datasource.username=root
spring.datasource.password=
#server.port=8081
#
# Keep the connection alive if idle for a long time (needed in production)
#
spring.datasource.testWhileIdle=true
#spring.datasource.validationQuery = SELECT 1
spring.jackson.serialization.fail-on-empty-beans=false
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
# ===============================
# = JPA / HIBERNATE
# ===============================
# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto=update
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
server.servlet.context-path=/api/govi_mithuru
# ===============================
# = JWT config
# ===============================
jwt.loginurl=/users/login
jwt.requrl=/users/login
jwt.header=Authorization
jwt.prefix=Bearer
jwt.expiration=86400
encrypted.property=ENC(uTSqb9grs1+vUv3iN8lItC0kl65lMG+8)

